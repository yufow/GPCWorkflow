 
// <math.gpl>

int order_i;
function order(n) {
	if(!n) return 0;
	order_i = 0;
	while(n) {
		n /= 10;
		order_i++;
	}
	return order_i--;
}

int gcd_temp;
function gcd(a, b) {
	gcd_temp = 0;
    while(b != 0) {
        gcd_temp = a % b;
        a = b;
        b = gcd_temp;
    }
    return a;
}

const int32 quick_pow10_data[] = {
	1, 10, 100, 1000, 10000, 
    100000, 1000000, 10000000,
	100000000, 1000000000
};
function quick_pow10(n) {
	return quick_pow10_data[n];
}

function quick_order(n) {
    if (n < 10) return 0;
    else if (n < 100) return 1;
    else if (n < 1000) return 2;
    else if (n < 10000) return 3;
    else if (n < 100000) return 4;
    else if (n < 1000000) return 5;
    else if (n < 10000000) return 6;
    else if (n < 100000000) return 7; 
    else if (n < 1000000000) return 8;
    return 9;
}
